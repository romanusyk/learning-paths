---
title: "Obstacles to Learning English"
format:
  html:
    toc: true
    number-sections: false
    code-fold: true
---

We provide a comprehensive overview of obstacles to learning English based on survey data and derived mappings.

```{python}
import pandas as pd
import json
from collections import Counter, defaultdict

df = pd.read_csv('../data/form_data.csv')
obs_df = pd.read_csv('../data/obstacles.csv')
with open('../data/obstacles_map.json', 'r', encoding='utf-8') as f:
    mapping = json.load(f)

# Build frequency of labels
label_counts = Counter()
for row in mapping:
    for label in row.get('labels', []):
        label_counts[label] += 1

total_with_answer = len({row['respondent_id'] for row in mapping})
count_never = label_counts.get('Never', 0)
count_stopped = total_with_answer - count_never
count_unknown = len(df) - total_with_answer

count_stopped, count_never, count_unknown, len(df)
```

### Overview

```{python}
print(f"Stopped at least once (among those who answered): {count_stopped}")
print(f"Explicitly never stopped (among those who answered): {count_never}")
print(f"No data (did not answer the question): {count_unknown}")
```

### Obstacles by popularity

```{python}
import matplotlib.pyplot as plt

# Exclude 'Never' from ranking of obstacles
obstacle_counts = {k: v for k, v in label_counts.items() if k != 'Never'}
ranked = sorted(obstacle_counts.items(), key=lambda kv: kv[1], reverse=True)

fig, ax = plt.subplots(figsize=(9, max(3, len(ranked)*0.4)))
ax.barh([k for k, _ in reversed(ranked)], [v for _, v in reversed(ranked)], color='#5B8FF9')
ax.set_xlabel('Number of respondents')
ax.set_title('Obstacles by popularity')
plt.tight_layout()
plt.show()
```

```{python}
# Display the ordered table with explanations (show full text, no truncation, no index column)
from IPython.display import display, HTML

explain_map = {r['obstacle']: r.get('explanation', '') for r in obs_df.to_dict(orient='records')}
rows = [
    {'obstacle': name, 'count': cnt, 'explanation': explain_map.get(name, '')}
    for name, cnt in ranked
]
table_df = pd.DataFrame(rows)
with pd.option_context('display.max_colwidth', None):
    html = table_df.to_html(index=False)
    display(HTML(html))
```

### Interactive: All examples with English translations

The table below lists every respondent's free-text obstacle answer alongside the set of mapped obstacles (labels). Use the buttons to filter by obstacle label and toggle between original and English text.

```{python}
#| echo: false
#| results: asis
import sys, os
from IPython.display import HTML, display
sys.path.append(os.path.abspath('..'))
from src.ui.data_tables.examples_table import render_examples_block

html_block = render_examples_block(
    table_id='obstacles-examples-table',
    form_csv='../data/form_data.csv',
    obstacles_eng_csv='../data/obstacles_eng.csv',
    map_json='../data/obstacles_map.json',
)
display(HTML(html_block))
```


